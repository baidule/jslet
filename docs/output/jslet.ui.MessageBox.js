Ext.data.JsonP.jslet_ui_MessageBox({"tagname":"class","name":"jslet.ui.MessageBox","autodetected":{},"files":[{"filename":"jslet.messagebox.js","href":"jslet.messagebox.html#jslet-ui-MessageBox"}],"members":[{"name":"show","tagname":"method","owner":"jslet.ui.MessageBox","id":"method-show","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-jslet.ui.MessageBox","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/jslet.messagebox.html#jslet-ui-MessageBox' target='_blank'>jslet.messagebox.js</a></div></pre><div class='doc-contents'><p>MessageBox, it can be used to display info, warn, error, confirm, prompt dialog.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-show' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jslet.ui.MessageBox'>jslet.ui.MessageBox</span><br/><a href='source/jslet.messagebox.html#jslet-ui-MessageBox-method-show' target='_blank' class='view-source'>view source</a></div><a href='#!/api/jslet.ui.MessageBox-method-show' class='name expandable'>show</a>( <span class='pre'>message, caption, iconClass, buttons, callbackFn, hasInput, defaultValue, validateFn</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Show message box. ...</div><div class='long'><p>Show message box.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>message</span> : String<div class='sub-desc'><p>Message text.</p>\n</div></li><li><span class='pre'>caption</span> : String<div class='sub-desc'><p>Caption text.</p>\n</div></li><li><span class='pre'>iconClass</span> : String<div class='sub-desc'><p>Caption icon class.</p>\n</div></li><li><span class='pre'>buttons</span> : String[]<div class='sub-desc'><p>Array of button names, it's the subset of array ['ok','cancel', 'yes', 'no'], like : ['ok','cancel'].</p>\n</div></li><li><span class='pre'>callbackFn</span> : Function<div class='sub-desc'><p>Callback function when user click one button.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>button</span> : String<div class='sub-desc'><p>Button name which clicked, optional value: ok, cancel, yes, no.</p>\n</div></li><li><span class='pre'>value</span> : String<div class='sub-desc'><p>Text which user inputted.</p>\n</div></li></ul></div></li><li><span class='pre'>hasInput</span> : Integer<div class='sub-desc'><p>Value inputting flag, options: 0 - none, 1 - single line input, 2 - multiple line input.</p>\n</div></li><li><span class='pre'>defaultValue</span> : String<div class='sub-desc'><p>The default value of Input element, if 'hasInput' = 0, this argument is be ignored.</p>\n</div></li><li><span class='pre'>validateFn</span> : Function<div class='sub-desc'><p>Validate function of input element, if 'hasInput' = 0, this argument is be ignored.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : String<div class='sub-desc'><p>The value which need to be validated, if 'hasInput' = 0, this argument is be ignored.</p>\n</div></li></ul></div></li></ul></div></div></div></div></div></div></div>","meta":{}});