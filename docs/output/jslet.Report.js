Ext.data.JsonP.jslet_Report({"tagname":"class","name":"jslet.Report","autodetected":{},"files":[{"filename":"jslet.report.js","href":"jslet.report.html#jslet-Report"}],"members":[{"name":"design","tagname":"method","owner":"jslet.Report","id":"method-design","meta":{"chainable":true}},{"name":"preview","tagname":"method","owner":"jslet.Report","id":"method-preview","meta":{"chainable":true}},{"name":"print","tagname":"method","owner":"jslet.Report","id":"method-print","meta":{"chainable":true}}],"alternateClassNames":[],"aliases":{},"id":"class-jslet.Report","short_doc":"A class to connect to jslet report assistant. ...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/jslet.report.html#jslet-Report' target='_blank'>jslet.report.js</a></div></pre><div class='doc-contents'><p>A class to connect to jslet report assistant. It provides the following feature:\ndesign report, preview report, print report.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-design' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jslet.Report'>jslet.Report</span><br/><a href='source/jslet.report.html#jslet-Report-method-design' target='_blank' class='view-source'>view source</a></div><a href='#!/api/jslet.Report-method-design' class='name expandable'>design</a>( <span class='pre'>datasets, reportId, reportName, templateXml, printFields</span> ) : <a href=\"#!/api/jslet.Report\" rel=\"jslet.Report\" class=\"docClass\">jslet.Report</a><span class=\"signature\"><span class='chainable' >chainable</span></span></div><div class='description'><div class='short'>Design a report template. ...</div><div class='long'><p>Design a report template. Example:</p>\n\n<pre class='inline-example '><code>//Design a new report template.\njslet.defaultReport.design('employee', 'report1', 'Employee List');\n\nvar template = '...';\n//Design an existed report template.\njslet.defaultReport.design('employee', 'report1', 'Employee List', template);\n\n//Exclude the 'salary' field.\njslet.defaultReport.design('employee', 'report1', 'Employee List', null, \n        {'employee':{exclude:'salary'}});\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>datasets</span> : String<div class='sub-desc'><p>(Required)Dataset names, multiple dataset names are separated by comma(,).</p>\n</div></li><li><span class='pre'>reportId</span> : String<div class='sub-desc'><p>(Required)Report id.</p>\n</div></li><li><span class='pre'>reportName</span> : String<div class='sub-desc'><p>(Required)Report name.</p>\n</div></li><li><span class='pre'>templateXml</span> : String<div class='sub-desc'><p>(Required)Report template XML string, the template is designed by jslet.defaultReport.design(..).</p>\n</div></li><li><span class='pre'>printFields</span> : Object<div class='sub-desc'><p>The fields need to be print, the format is:\n        {dsName: {includeFields: ['f1',...], excludeFields: ['f3',...]}},\n        for example: {'employee', {includeFields: ['code']}, excludeFields: ['birthday']}}.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/jslet.Report\" rel=\"jslet.Report\" class=\"docClass\">jslet.Report</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-preview' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jslet.Report'>jslet.Report</span><br/><a href='source/jslet.report.html#jslet-Report-method-preview' target='_blank' class='view-source'>view source</a></div><a href='#!/api/jslet.Report-method-preview' class='name expandable'>preview</a>( <span class='pre'>datasets, reportId, reportName, templateXml, printFields, printRange</span> ) : <a href=\"#!/api/jslet.Report\" rel=\"jslet.Report\" class=\"docClass\">jslet.Report</a><span class=\"signature\"><span class='chainable' >chainable</span></span></div><div class='description'><div class='short'>Preview a report. ...</div><div class='long'><p>Preview a report. Example:</p>\n\n<pre class='inline-example '><code>var template = '...';\n//Preview all records.\njslet.defaultReport.preview('employee', 'report1', 'Employee List', template);\n\n//Exclude the 'salary' field.\njslet.defaultReport.preview('employee', 'report1', 'Employee List', template, \n        {'employee':{exclude:'salary'}});\n\n//Preview the current record.\njslet.defaultReport.preview('employee', 'report1', 'Employee List', template, \n        {'employee':{exclude:'salary'}}, <a href=\"#!/api/jslet.data.RecordRange-property-CURRENT\" rel=\"jslet.data.RecordRange-property-CURRENT\" class=\"docClass\">jslet.data.RecordRange.CURRENT</a>);\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>datasets</span> : String<div class='sub-desc'><p>(Required)Dataset names, multiple dataset names are separated by comma(,).</p>\n</div></li><li><span class='pre'>reportId</span> : String<div class='sub-desc'><p>(Required)Report id.</p>\n</div></li><li><span class='pre'>reportName</span> : String<div class='sub-desc'><p>(Required)Report name.</p>\n</div></li><li><span class='pre'>templateXml</span> : String<div class='sub-desc'><p>(Required)Report template XML string, the template is designed by jslet.defaultReport.design(..).</p>\n</div></li><li><span class='pre'>printFields</span> : Object<div class='sub-desc'><p>The fields need to be print, the format is:\n        {dsName: {includeFields: ['f1',...], excludeFields: ['f3',...]}},\n        for example: {'employee', {includeFields: ['code']}, excludeFields: ['birthday']}}.</p>\n</div></li><li><span class='pre'>printRange</span> : <a href=\"#!/api/jslet.data.RecordRange\" rel=\"jslet.data.RecordRange\" class=\"docClass\">jslet.data.RecordRange</a><div class='sub-desc'><p>Record range to preview,\n        the optional values are <a href=\"#!/api/jslet.data.RecordRange-property-ALL\" rel=\"jslet.data.RecordRange-property-ALL\" class=\"docClass\">jslet.data.RecordRange.ALL</a>(default),\n        <a href=\"#!/api/jslet.data.RecordRange-property-SELECTED\" rel=\"jslet.data.RecordRange-property-SELECTED\" class=\"docClass\">jslet.data.RecordRange.SELECTED</a>, <a href=\"#!/api/jslet.data.RecordRange-property-CURRENT\" rel=\"jslet.data.RecordRange-property-CURRENT\" class=\"docClass\">jslet.data.RecordRange.CURRENT</a>.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/jslet.Report\" rel=\"jslet.Report\" class=\"docClass\">jslet.Report</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-print' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jslet.Report'>jslet.Report</span><br/><a href='source/jslet.report.html#jslet-Report-method-print' target='_blank' class='view-source'>view source</a></div><a href='#!/api/jslet.Report-method-print' class='name expandable'>print</a>( <span class='pre'>datasets, reportId, reportName, templateXml, printFields, printRange</span> ) : <a href=\"#!/api/jslet.Report\" rel=\"jslet.Report\" class=\"docClass\">jslet.Report</a><span class=\"signature\"><span class='chainable' >chainable</span></span></div><div class='description'><div class='short'>Print a report. ...</div><div class='long'><p>Print a report. Example:</p>\n\n<pre class='inline-example '><code>var template = '...';\n//Print all records.\njslet.defaultReport.print('employee', 'report1', 'Employee List', template);\n\n//Exclude the 'salary' field.\njslet.defaultReport.print('employee', 'report1', 'Employee List', template, \n        {'employee':{exclude:'salary'}});\n\n//Print the current record.\njslet.defaultReport.print('employee', 'report1', 'Employee List', template, \n        {'employee':{exclude:'salary'}}, <a href=\"#!/api/jslet.data.RecordRange-property-CURRENT\" rel=\"jslet.data.RecordRange-property-CURRENT\" class=\"docClass\">jslet.data.RecordRange.CURRENT</a>);\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>datasets</span> : String<div class='sub-desc'><p>(Required)Dataset names, multiple dataset names are separated by comma(,).</p>\n</div></li><li><span class='pre'>reportId</span> : String<div class='sub-desc'><p>(Required)Report id.</p>\n</div></li><li><span class='pre'>reportName</span> : String<div class='sub-desc'><p>(Required)Report name.</p>\n</div></li><li><span class='pre'>templateXml</span> : String<div class='sub-desc'><p>(Required)Report template XML string, the template is designed by jslet.defaultReport.design(..).</p>\n</div></li><li><span class='pre'>printFields</span> : Object<div class='sub-desc'><p>The fields need to be print, the format is:\n        {dsName: {includeFields: ['f1',...], excludeFields: ['f3',...]}},\n        for example: {'employee', {includeFields: ['code']}, excludeFields: ['birthday']}}.</p>\n</div></li><li><span class='pre'>printRange</span> : <a href=\"#!/api/jslet.data.RecordRange\" rel=\"jslet.data.RecordRange\" class=\"docClass\">jslet.data.RecordRange</a><div class='sub-desc'><p>Record range to print,\n        the optional values are <a href=\"#!/api/jslet.data.RecordRange-property-ALL\" rel=\"jslet.data.RecordRange-property-ALL\" class=\"docClass\">jslet.data.RecordRange.ALL</a>(default),\n        <a href=\"#!/api/jslet.data.RecordRange-property-SELECTED\" rel=\"jslet.data.RecordRange-property-SELECTED\" class=\"docClass\">jslet.data.RecordRange.SELECTED</a>, <a href=\"#!/api/jslet.data.RecordRange-property-CURRENT\" rel=\"jslet.data.RecordRange-property-CURRENT\" class=\"docClass\">jslet.data.RecordRange.CURRENT</a>.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/jslet.Report\" rel=\"jslet.Report\" class=\"docClass\">jslet.Report</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});