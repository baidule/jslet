Ext.data.JsonP.jslet_data_DatasetFactory({"tagname":"class","name":"jslet.data.DatasetFactory","autodetected":{},"files":[{"filename":"jslet.datasetfactory.js","href":"jslet.datasetfactory.html#jslet-data-DatasetFactory"}],"members":[{"name":"addMetaStore","tagname":"method","owner":"jslet.data.DatasetFactory","id":"method-addMetaStore","meta":{"chainable":true}},{"name":"createDataset","tagname":"method","owner":"jslet.data.DatasetFactory","id":"method-createDataset","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-jslet.data.DatasetFactory","short_doc":"Dataset factory. ...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/jslet.datasetfactory.html#jslet-data-DatasetFactory' target='_blank'>jslet.datasetfactory.js</a></div></pre><div class='doc-contents'><p>Dataset factory. Example:</p>\n\n<pre class='inline-example '><code>var dsFactory = new <a href=\"#!/api/jslet.data.DatasetFactory\" rel=\"jslet.data.DatasetFactory\" class=\"docClass\">jslet.data.DatasetFactory</a>();\ndsFactory.createDataset('');\n</code></pre>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-addMetaStore' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jslet.data.DatasetFactory'>jslet.data.DatasetFactory</span><br/><a href='source/jslet.datasetfactory.html#jslet-data-DatasetFactory-method-addMetaStore' target='_blank' class='view-source'>view source</a></div><a href='#!/api/jslet.data.DatasetFactory-method-addMetaStore' class='name expandable'>addMetaStore</a>( <span class='pre'>metaStore</span> ) : this<span class=\"signature\"><span class='chainable' >chainable</span></span></div><div class='description'><div class='short'>Add a dataset meta store object. ...</div><div class='long'><p>Add a dataset meta store object. Example:</p>\n\n<pre class='inline-example '><code>//Array meta store\nvar datasetMetas = [{name: 'ds1', fields:[{name: 'field1', dataType: 'S', length: 20}, ...]}, ...];\nvar arrayMetaStore = {\n     getDatasetMeta: function(datasetName) {\n         var dsMeta;\n         for(var i = 0, len = datasetMetas.length; i++) {\n             dsMeta = datasetMetas[i];\n             if(dsMeta.name === datasetName) {\n                 return dsMeta\n             }\n         }\n         return null;\n     }\n}\njslet.data.datasetFactory.addMetaStore(arrayMetaStore);\n\n//IndexedDB meta store\nvar indexedDBMetaStore = new <a href=\"#!/api/jslet.data.IndexedDBMetaStore\" rel=\"jslet.data.IndexedDBMetaStore\" class=\"docClass\">jslet.data.IndexedDBMetaStore</a>('demo');\njslet.data.datasetFactory.addMetaStore(indexedDBMetaStore);\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>metaStore</span> : <a href=\"#!/api/jslet.data.DatasetMetaStore\" rel=\"jslet.data.DatasetMetaStore\" class=\"docClass\">jslet.data.DatasetMetaStore</a><div class='sub-desc'><p>A meta store object.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>this</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-createDataset' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jslet.data.DatasetFactory'>jslet.data.DatasetFactory</span><br/><a href='source/jslet.datasetfactory.html#jslet-data-DatasetFactory-method-createDataset' target='_blank' class='view-source'>view source</a></div><a href='#!/api/jslet.data.DatasetFactory-method-createDataset' class='name expandable'>createDataset</a>( <span class='pre'>datasetNames, creatingOption</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Create dataset with dataset configuration which is stored in other place, like DB, IndexedDB. ...</div><div class='long'><p>Create dataset with dataset configuration which is stored in other place, like DB, IndexedDB.<br />\nIt will fire global event: <a href=\"#!/api/jslet.global.dataset-event-onDatasetCreating\" rel=\"jslet.global.dataset-event-onDatasetCreating\" class=\"docClass\">jslet.global.dataset.onDatasetCreating</a>, you can listen this event, load dataset configuration and create it.<br />\nThis method will not return dataset object. You can call <a href=\"#!/api/jslet.data-method-getDataset\" rel=\"jslet.data-method-getDataset\" class=\"docClass\">jslet.data.getDataset</a> to get the dataset object.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>datasetNames</span> : String | String[]<div class='sub-desc'><p>Dataset name;</p>\n</div></li><li><span class='pre'>creatingOption</span> : Object<div class='sub-desc'><p>Creating option, pattern:\n{maxCreatingLevel: x, includeFields: ['fieldName1','fieldName2',...], excludeFields: ['fieldName8',...], onlyLookupFields: true|false}</p>\n<ul><li><span class='pre'>maxCreatingLevel</span> : Integer<div class='sub-desc'><p>Specified the max creating level when creating dataset nested(host dataset -> lookup dataset -> lookup dataset-> ...).</p>\n</div></li><li><span class='pre'>includeFields</span> : String[]<div class='sub-desc'><p>Only create dataset with the specified field names.</p>\n</div></li><li><span class='pre'>excludeFields</span> : String[]<div class='sub-desc'><p>Create dataset without the specified field names.</p>\n</div></li><li><span class='pre'>visibleFields</span> : String[]<div class='sub-desc'><p>Visible field names.</p>\n</div></li><li><span class='pre'>onlyLookupFields</span> : Boolean<div class='sub-desc'><p>If onlyLookupFields is true, it will create dataset with fields which specified by the following dataset's properties: keyField, codeField, nameField, parentField and statusField;</p>\n</div></li><li><span class='pre'>datasetType</span> : <a href=\"#!/api/jslet.data.DatasetType\" rel=\"jslet.data.DatasetType\" class=\"docClass\">jslet.data.DatasetType</a><div class='sub-desc'><p>The optional values are:  <a href=\"#!/api/jslet.data.DatasetType-property-NORMAL\" rel=\"jslet.data.DatasetType-property-NORMAL\" class=\"docClass\">jslet.data.DatasetType.NORMAL</a>, <a href=\"#!/api/jslet.data.DatasetType-property-LOOKUP\" rel=\"jslet.data.DatasetType-property-LOOKUP\" class=\"docClass\">jslet.data.DatasetType.LOOKUP</a>, <a href=\"#!/api/jslet.data.DatasetType-property-DETAIL\" rel=\"jslet.data.DatasetType-property-DETAIL\" class=\"docClass\">jslet.data.DatasetType.DETAIL</a>;</p>\n</div></li><li><span class='pre'>realDatasetName</span> : String<div class='sub-desc'><p>Dataset creator uses \"realDatasetName\" to load dataset records.</p>\n</div></li><li><span class='pre'>hostDatasetName</span> : String<div class='sub-desc'><p>Host dataset name.</p>\n</div></li></ul></div></li></ul><h3 class='pa'>Fires</h3><ul><li>onDatasetCreating</li></ul></div></div></div></div></div></div></div>","meta":{}});